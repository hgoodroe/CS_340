<!-- Code for head portion based on SA CS290 Web Dev Project
    index.html page header
    Date: 8/14/2023 -->

<head>
    <meta charset="utf-8" />
    <title>Members_Has_Movies Sub-page </title>
    <link id="styleSheet" href="style.css" rel="stylesheet" type="text/css" />
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
</head>


<!-- Code for the READ function (table)
    Copied from/ modified from the nodejs-start-app
    from osu-cs340-campus git account- Step 4 - Dynamically Displaying Data
    Date: 8/14/2023
    URL: https://github.com/osu-cs340-ecampus/nodejs-starter-app/tree/main/Step%204%20-%20Dynamically%20Displaying%20Data
    -->
<body>
    <header>
        <h1>CREATE / READ Movies that Members have checked out</h1>
    </header>
    <main>
        <section>
            <h2>Movies Members have checked out!</h2>
            <table id="membersHasMoviesTable">
                {{!-- Header section --}}
                <thead>
                    <tr>
                        {{#each members_movies.[0]}}
                        <th>
                            {{@key}}
                        </th>
                        {{/each}}
                    </tr>
                </thead>

                {{!-- Body section --}}
                <tbody>
                    {{!-- For each row, print each ID, movie name, age rating, release date, IMDB rating,
                    Rottent tomatoes rating, # of times rented, sub-genre --}}
                    {{#each members_movies}}
                    <tr>
                        <td>{{this.Member}}</td>
                        <td>{{this.Movie}}</td>
                        <td>{{this.Overdue}}</td>
                        <td>{{this.Returned}}</td>
                        <td>{{this.Checked_Out_Date}}</td>
                        <td>{{this.Returned_Date}}</td>
                    </tr>
                    {{/each}}
                </tbody>
                <table />

                <!-- Code for the INSERT function (checkout a movie)
                    Copied from/ modified from the nodejs-start-app
                    from osu-cs340-campus git account- Step 5 - Adding New Data
                    Date: 8/14/2023
                    URL: https://github.com/osu-cs340-ecampus/nodejs-starter-app/tree/main/Step%205%20-%20Adding%20New%20Data
                    -->
                <h2>Checkout A Movie</h2>
                <p>To checkout a movie, select your name, the movie you'd like to rent and click 'Submit'</p>

                <form id="add-movie-rental-form" method="POST" action="/add-movie-rental-form">

                    <!-- Code to dynamically fill the drop downs for members & movies
                    Copied from/ modified from the nodejs-start-app
                    from osu-cs340-campus git account- Step 6 -
                    Dynamically Filling Dropdowns and Adding a Search Box
                    Date: 8/14/2023
                    URL: https://github.com/osu-cs340-ecampus/nodejs-starter-app/tree/main/Step%206%20-%20Dynamically%20Filling%20Dropdowns%20and%20Adding%20a%20Search%20Box
                    -->
                    <label for="input_name">Name: </label>
                    <select name="input_name" id="input_name">
                        <option>Select Member</option>
                        {{#each members}}
                        <option value="{{this.member_ID}}">{{this.name}}</option>
                        {{/each}}
                    </select>

                    <label for="input_movie">Movie: </label>
                    <select name="input_movie" id="input_movie">
                        <option>Pick Out a Movie</option>
                        {{#each movies}}
                        <option value="{{this.movie_ID}}">{{this.movie_name}}</option>
                        {{/each}}
                    </select>
                    <input type="submit">

                </form>

        </section>
    </main>
    {{!--
    <script>
        function editMember(member) {
            alert('Future edits coming!');
        }
    </script>
    <script>
        function deleteMember(member) {
            alert('Future deletion coming!');
        }
    </script> --}}

</body>